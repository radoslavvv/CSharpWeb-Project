@using CSharpWebProject.Models
@model PaginatedList<CSharpWebProject.Models.ViewModels.NewsPostViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>News: </h1>

@if (User.IsInRole("Administrator"))
{
    <a href="/Admin/News/Create">
        <div id="createNewPostButton" class="btn btn-primary">
            Create new
        </div>
    </a>

}
@foreach (var item in Model)
{
    <div class="card newsPost">
        <h5 class="card-header"><span class="newsPostDate">@item.Date</span></h5>
        <div class="card-body">
            <h5 class="card-title">@item.Title</h5>
            <p class="card-text">@item.Content<p>
            <p class="card-text float-right"><span class="newsPostAuthor">Author: @item.AuthorName</span></p>
                @if (User.IsInRole("Administrator"))
                {
                    <p>
                        <a class="btn btn-outline-dark" asp-action="Edit" asp-controller="News" asp-area="Admin" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-controller="News" asp-area="Admin" asp-route-id="@item.Id">Delete</a>
                    </p>
                }
            </div>
        </div>

    }

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@if (Model.Count >= 5 && Model.HasNextPage || Model.HasPreviousPage)
{
    <a href="/News/Index?page=@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a href="/News/index?page=@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}

