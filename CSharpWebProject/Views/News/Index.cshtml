@using CSharpWebProject.Models
@model PaginatedList<CSharpWebProject.Models.ViewModels.NewsPostViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>News: </h1>

@if (User.IsInRole("Administrator"))
{
    <a href="/Admin/News/Create">
        <div id="createNewPostButton" class="btn btn-primary">
            Create new
        </div>
    </a>

}
@foreach (var item in Model)
{
    <div class="card">
        <h5 class="card-header">Featured</h5>
        <div class="card-body">
            <h5 class="card-title">@item.Title</h5>
            <p class="card-text">@item.Content<p>
            <p class="card-text float-right">-- @item.AuthorName /@item.Date/<p>
        </div>
    </div>

}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a href="/News/Index?page=@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a href="/News/index?page=@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
